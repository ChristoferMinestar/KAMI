buildscript {

    repositories {
        jcenter()

        maven {
            name = 'forge'
            url = 'http://files.minecraftforge.net/maven'
        }

        maven {
            name = 'SpongePowered'
            url = 'http://repo.spongepowered.org/maven'
        }
    }

    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:3.+'
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
        classpath 'com.github.jengelman.gradle.plugins:shadow:5.2.0'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }

}

apply plugin: 'idea'
apply plugin: 'eclipse'

apply plugin: 'kotlin'
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.spongepowered.mixin'
apply plugin: 'com.github.johnrengelman.shadow'

version project.modVersion
group project.modGroup

sourceSets.main.java {
    srcDirs += 'src/main/cape-api'
    srcDirs += 'src/main/commons'
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
    options.encoding = 'UTF-8'
}

repositories {
    maven {
        name = 'spongepowered-repo'
        url = 'http://repo.spongepowered.org/maven/'
    }
    maven {
        name = 'impactdevelopment-repo'
        url = 'https://impactdevelopment.github.io/maven/'
    }
    maven {
        name = 'swt-repo'
        url = "http://maven-eclipse.github.io/maven"
    }
    maven {
        name = "jitpack.io"
        url = "https://jitpack.io"
    }
    mavenCentral()
    jcenter()
}


minecraft {
    mappings channel: 'stable', version: '39-1.12'

    runs {
        client {
            workingDirectory project.file('run')

            property 'fml.coreMods.load', 'me.zeroeightsix.kami.mixin.MixinLoaderForge'
            property 'mixin.env.disableRefMap', 'true' // Disable refmap so we don't get trolled by Baritone

            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
        }
    }
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    compile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    compile "org.jetbrains:annotations:$annotations_version"

    minecraft 'net.minecraftforge:forge:1.12.2-14.23.5.2854'

    compile('org.spongepowered:mixin:0.7.11-SNAPSHOT') {
        exclude module: 'launchwrapper'
        exclude module: 'guava'
        exclude module: 'gson'
        exclude module: 'commons-io'
        exclude module: 'log4j-core' // we want to exclude this as well because 0.7.11 includes it too new for MC
    }

    annotationProcessor 'org.spongepowered:mixin:0.8.2:processor'

    compile('org.reflections:reflections:0.9.12') {
        exclude module: 'guava'
    }

    compile 'club.minnced:java-discord-rpc:2.0.2'
    compile 'com.github.kevinsawicki:http-request:6.0'
    compile 'com.github.MrPowerGamerBR:TemmieWebhook:-SNAPSHOT'

    compile 'com.github.cabaletta:baritone:1.2.14'
    compile 'cabaletta:baritone-api:1.2'
}

mixin {
    disableAnnotationProcessorCheck = true
    defaultObfuscationEnv 'searge'
    add sourceSets.main, 'mixins.kami.refmap.json'
}

processResources {
    inputs.property 'version', project.version

    exclude '**/rawimagefiles'

    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
        expand 'version': project.version
    }
}

// Don't put baritone mixin here please c:
jar {
    manifest.attributes(
            'Manifest-Version': 1.0,
            'MixinConfigs': 'mixins.kami.json',
            'TweakClass': 'org.spongepowered.asm.launch.MixinTweaker',
            'TweakOrder': 0,
            'FMLCorePluginContainsFMLMod': 'true',
            'FMLCorePlugin': 'me.zeroeightsix.kami.mixin.MixinLoaderForge',
            'ForceLoadAsMod': 'true',
            'Main-Class': 'me.zeroeightsix.installer.Installer'
    )
}

shadowJar {
    dependencies {
        include(dependency('cabaletta:baritone-api'))
        include(dependency('club.minnced:java-discord-rpc'))
        include(dependency('com.github.kevinsawicki:http-request'))
        include(dependency('com.github.MrPowerGamerBR:TemmieWebhook'))
        include(dependency("org.jetbrains.kotlin:kotlin-reflect"))
        include(dependency("org.jetbrains.kotlin:kotlin-stdlib"))
        include(dependency("org.jetbrains.kotlin:kotlin-stdlib-jdk7"))
        include(dependency("org.jetbrains.kotlin:kotlin-stdlib-jdk8"))
        include(dependency('org.javassist:javassist'))
        include(dependency('org.reflections:reflections'))
        include(dependency('org.spongepowered:mixin'))
    }

    archiveClassifier.set('release')
}

reobf {
    shadowJar {
        classpath = sourceSets.main.compileClasspath
    }
}

build.dependsOn(shadowJar)
